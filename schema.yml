openapi: 3.0.3
info:
  title: DRF IMDb
  version: 0.0.0
paths:
  /account/api/token/:
    post:
      operationId: account_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /account/api/token/refresh/:
    post:
      operationId: account_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /account/login/:
    post:
      operationId: account_login_create
      tags:
      - account
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /account/logout/:
    post:
      operationId: account_logout_create
      tags:
      - account
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /account/register/:
    post:
      operationId: account_register_create
      tags:
      - account
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /watch/{id}/:
    get:
      operationId: watch_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: watch_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: watch_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /watch/{id}/review-create/:
    post:
      operationId: watch_review_create_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /watch/{id}/reviews/:
    get:
      operationId: watch_reviews_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
          description: ''
  /watch/list/:
    get:
      operationId: watch_list_retrieve
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: watch_list_create
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /watch/reviews/{id}:
    get:
      operationId: watch_reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: watch_reviews_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: watch_reviews_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: watch_reviews_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /watch/stream/:
    get:
      operationId: watch_stream_retrieve
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: watch_stream_create
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /watch/stream/{id}:
    get:
      operationId: watch_stream_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: watch_stream_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: watch_stream_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watch
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    PatchedReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        review_author:
          type: string
          readOnly: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        description:
          type: string
          nullable: true
          maxLength: 200
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        update:
          type: string
          format: date-time
          readOnly: true
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        review_author:
          type: string
          readOnly: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        description:
          type: string
          nullable: true
          maxLength: 200
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        update:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - rating
      - review_author
      - update
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
